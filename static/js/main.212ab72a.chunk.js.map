{"version":3,"sources":["components/Members/Member.js","components/Members/Members.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["member","props","className","key","id","first_name","last_name","onClick","handleEdit","bind","handleDelete","members","map","Member","form","onSubmit","handleSubmit","name","value","onChange","handleChange","type","disabled","btnDisabled","btnLoading","App","event","target","setState","preventDefault","payload","state","formStatus","addMember","editMember","url","axios","post","then","respon","push","data","catch","error","console","log","put","indexMember","findIndex","memberIdSelected","delete","status","index","splice","get","this","Form","Members","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.212ab72a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst member = (props) => (\r\n    <div className=\"col-md-6\" key={props.member.id}>\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h6 className=\"card-title\">{props.member.id}</h6>\r\n                <p className=\"card-text\">Nama Depan : {props.member.first_name}</p>\r\n                <p className=\"card-text\">Nama Belakang : {props.member.last_name}</p>\r\n                <button className=\"btn btn-primary btn-sm mr-3\" onClick={props.handleEdit.bind(this, props.member)}>Edit</button>\r\n                <button className=\"btn btn-danger btn-sm mr-3\" onClick={props.handleDelete.bind(this, props.member.id)}>Hapus</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default member","import React from 'react'\r\nimport Member from './Member'\r\n\r\nconst members = (props) => (\r\n    props.members.map((member) => (\r\n        <Member\r\n            member={member}\r\n            handleEdit={(member) => props.handleEdit(member)}\r\n            handleDelete={(id) => props.handleDelete(id)}\r\n        />\r\n    ))\r\n)\r\n\r\nexport default members","import React from 'react'\r\n\r\nconst form = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Nama Depan</label>\r\n            <input\r\n                className=\"form-control\"\r\n                name=\"first_name\"\r\n                value={props.first_name}\r\n                onChange={props.handleChange}\r\n            ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Nama Belakang</label>\r\n            <input\r\n                className=\"form-control\"\r\n                name=\"last_name\"\r\n                value={props.last_name}\r\n                onChange={props.handleChange}\r\n            ></input>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={props.btnDisabled}>\r\n            <span className={props.btnLoading}></span>\r\n                Submit\r\n              </button>\r\n    </form>\r\n)\r\n\r\nexport default form","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Members from './components/Members/Members'\nimport Form from './components/Form/Form'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: [],\n      first_name: \"\",\n      last_name: \"\",\n      formStatus: \"create\",\n      memberIdSelected: null,\n      btnDisabled: false,\n      btnLoading: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://reqres.in/api/users?page=2')\n      .then(respon => {\n        this.setState({ members: respon.data.data })\n        console.log(respon)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  handleChange = (event) => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      btnDisabled: true,\n      btnLoading: \"spinner-border spinner-border-sm\"\n    });\n\n    let payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    };\n\n    if (this.state.formStatus === \"create\") {\n      let url = 'https://reqres.in/api/users';\n      this.addMember(url, payload);\n    } else {\n      let url = 'https://reqres.in/api/users';\n      this.editMember(url, payload);\n    }\n  }\n\n  addMember = (url, payload) => {\n    axios.post(url, payload)\n      .then(respon => {\n        // console.log(respon);\n        let members = [...this.state.members];\n        members.push(respon.data);\n        this.setState({\n          members,\n          btnDisabled: false,\n          btnLoading: \"\",\n          first_name: \"\",\n          last_name: \"\"\n        });\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  editMember = (url, payload) => {\n    axios.put(url, payload)\n      .then(respon => {\n        // console.log(respon.status)\n        let members = [...this.state.members];\n        let indexMember = members.findIndex(member => member.id === this.state.memberIdSelected);\n\n        console.log(members)\n        console.log(indexMember)\n        members[indexMember].first_name = respon.data.first_name\n        members[indexMember].last_name = respon.data.last_name\n\n        this.setState({\n          members,\n          first_name: \"\",\n          last_name: \"\",\n          formStatus: \"create\",\n          btnLoading: \"\",\n          btnDisabled: false,\n          memberIdSelected: null\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  handleEdit = (member) => {\n    this.setState({\n      first_name: member.first_name,\n      last_name: member.last_name,\n      formStatus: \"edit\",\n      memberIdSelected: member.id\n    })\n  }\n\n  handleDelete = (id) => {\n    let url = 'https://reqres.in/api/users/2'\n\n    axios.delete(url)\n      .then(respon => {\n        if (respon.status === 204) {\n          let members = [...this.state.members]\n          let index = members.findIndex(member => member.id === id)\n\n          members.splice(index, 1)\n          this.setState({\n            members\n          })\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container my-3\" >\n        <h1 className=\"text-center\">Devschool Team</h1>\n        <div className=\"row p-3 alert-secondary border rounded-sm my-3\">\n          <div className=\"col-md-6 alert-info rounded-sm py-3\">\n            <h3>Form {this.state.formStatus} Team</h3>\n            <Form\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              first_name={this.state.first_name}\n              last_name={this.state.last_name}\n              btnDisabled={this.state.btnDisabled}\n              btnLoading={this.state.btnLoading}\n            />\n          </div>\n          <div className=\"col-md-6 py-3\">\n            <h3>Team</h3>\n            <div className=\"row\">\n              <Members\n                members={this.state.members}\n                handleEdit={(member) => this.handleEdit(member)}\n                handleDelete={(id) => this.handleDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}